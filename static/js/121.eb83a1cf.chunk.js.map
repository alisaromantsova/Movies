{"version":3,"file":"static/js/121.eb83a1cf.chunk.js","mappings":"sPACA,EAA0B,6BAA1B,EAA8D,0BAA9D,EAAgG,2BAAhG,EAAkI,0B,kBCwElI,EAhEoB,WAClB,IACMA,GADKC,EAAAA,EAAAA,MACQD,QAEnB,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KAiCA,OA/BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAK,mCAAG,6FACZF,GAAU,GADE,kBAGaG,EAAAA,EAAAA,IAAA,UAdd,uCAcc,OACPT,EADO,oBAbnB,2CAamB,2BAHb,OAGJU,EAHI,OAOJC,EAAcD,EAASE,KAAKC,QAAQC,KAAI,SAAAX,GAC5C,IACoBY,EAGhBZ,EAHFa,eAAkBD,SASpB,MALY,CACVE,GAFEd,EAFFc,GAKAC,QAHEf,EADFe,QAKAH,SAAUA,EAGb,IACDX,EAAUO,GACVL,GAAU,GArBA,kDAuBVa,QAAQC,IAAI,SAvBF,0DAAH,qDA0BXZ,GAED,GAAE,KAGD,iBAAKa,UAAWC,EAAhB,UACGjB,IACC,SAAC,KAAD,CACEkB,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,QACNC,UAAU,UACVC,OAAO,SAGVzB,EAAO0B,OAAS,IACf,eAAIR,UAAWC,EAAf,SACGnB,EAAOW,KAAI,SAAAgB,GAAO,OACjB,2BACE,gBAAIT,UAAWC,EAAf,mBAAiCQ,EAAQf,aACzC,cAAGM,UAAWC,EAAd,SAAyBQ,EAAQZ,YAF1BY,EAAQb,GADA,MAQJ,IAAlBd,EAAO0B,SAAgB,+CAG7B,C","sources":["webpack://react-homework-template/./src/components/MovieReview/MovieReview.module.css?ccdf","components/MovieReview/MovieReview.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"MovieReview_section__P0voa\",\"list\":\"MovieReview_list__hbRhP\",\"title\":\"MovieReview_title__5UPR3\",\"text\":\"MovieReview_text__nFhRU\"};","import { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport css from './MovieReview.module.css';\nimport { Audio } from 'react-loader-spinner';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/';\nconst KEY = 'api_key=e777b5f5a1d00d3a4d56208d16e8e0e4';\n\nconst MovieReview = () => {\n  const id = useParams();\n  const movieId = id.movieId;\n\n  const [review, setReview] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  useEffect(() => {\n    const fetch = async () => {\n      setLoader(true);\n      try {\n        const response = await axios.get(\n          `${BASE_URL}${movieId}/reviews?${KEY}&language=en-US&page=1`\n        );\n\n        const reviewArray = response.data.results.map(review => {\n          const {\n            author_details: { username },\n            id,\n            content,\n          } = review;\n          const obj = {\n            id: id,\n            content: content,\n            username: username,\n          };\n          return obj;\n        });\n        setReview(reviewArray);\n        setLoader(false);\n      } catch {\n        console.log('error');\n      }\n    };\n    fetch();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className={css.section}>\n      {loader && (\n        <Audio\n          height=\"80\"\n          width=\"80\"\n          radius=\"9\"\n          color=\"green\"\n          ariaLabel=\"loading\"\n          margin=\"auto\"\n        />\n      )}\n      {review.length > 0 && (\n        <ul className={css.list}>\n          {review.map(comment => (\n            <li key={comment.id}>\n              <h3 className={css.title}>Autor:{comment.username}</h3>\n              <p className={css.text}>{comment.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {review.length === 0 && <p>Reviews not found</p>}\n    </div>\n  );\n};\nexport default MovieReview;\n"],"names":["movieId","useParams","useState","review","setReview","loader","setLoader","useEffect","fetch","axios","response","reviewArray","data","results","map","username","author_details","id","content","console","log","className","css","height","width","radius","color","ariaLabel","margin","length","comment"],"sourceRoot":""}