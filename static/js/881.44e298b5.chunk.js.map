{"version":3,"file":"static/js/881.44e298b5.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Movies_section__bjPDA\",\"title\":\"Movies_title__MDLXB\",\"input\":\"Movies_input__KrUqs\",\"button\":\"Movies_button__GcIka\",\"form\":\"Movies_form__4ow+Z\",\"list\":\"Movies_list__hqYjd\",\"moviesLi\":\"Movies_moviesLi__Eb45w\",\"name\":\"Movies_name__28cIO\",\"year\":\"Movies_year__rySZs\",\"text\":\"Movies_text__FlKVm\"};","import { Link, useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport css from './Movies.module.css';\nimport { Audio } from 'react-loader-spinner';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/search/movie';\nconst KEY = 'api_key=e777b5f5a1d00d3a4d56208d16e8e0e4';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchWord = searchParams.get('search');\n  const [movies, setMovies] = useState(null);\n  const [changingValue, setChangingValue] = useState(\n    searchParams.get('search')\n  );\n  const [submitValue, setSubmitValue] = useState('');\n  const [loader, setLoader] = useState(false);\n  useEffect(() => {\n    const fetch = async () => {\n      setLoader(true);\n      try {\n        const response = await axios.get(\n          `${BASE_URL}?${KEY}&query=${searchWord}`\n        );\n\n        const filmNames = response.data.results.map(film => {\n          const { title, name, id, poster_path, release_date } = film;\n          const obj = {\n            name: title || name,\n            id: id,\n            img: poster_path,\n            date: release_date ? release_date.slice(0, 4) : '',\n          };\n          return obj;\n        });\n        setMovies(filmNames);\n        setLoader(false);\n      } catch {\n        console.log('error');\n      }\n    };\n    if (searchWord) {\n      fetch();\n    } else {\n      setMovies(null);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [submitValue]);\n\n  return (\n    <div className={css.section}>\n      <h1 className={css.title}>Search movies</h1>\n      <form\n        className={css.form}\n        onSubmit={e => {\n          e.preventDefault();\n          if (e.target[0].value.trim()) {\n            setSearchParams({ search: e.target[0].value.trim() });\n            setSubmitValue(e.target[0].value.trim());\n          } else {\n            setSearchParams({});\n          }\n        }}\n      >\n        <input\n          onChange={e => {\n            setChangingValue(e.target.value);\n            setSearchParams({ search: e.target.value });\n          }}\n          className={css.input}\n          plaseholder=\"Film name...\"\n          value={changingValue}\n        />\n        <button className={css.button}>Search</button>\n      </form>\n      {loader && (\n        <Audio\n          height=\"80\"\n          width=\"80\"\n          radius=\"9\"\n          color=\"green\"\n          ariaLabel=\"loading\"\n          margin=\"auto\"\n        />\n      )}\n\n      {movies && movies.length > 0 && (\n        <ul className={css.list}>\n          {movies.map(movie => (\n            <li className={css.moviesLi} key={movie.id}>\n              <Link\n                to={`/movies/${movie.id}`}\n                state={{ from: `/movies?search=${searchWord}` }}\n              >\n                {movie.img ? (\n                  <img\n                    height=\"411px\"\n                    width=\"100%\"\n                    src={`${IMG_URL}${movie.img} `}\n                    alt=\"img\"\n                  />\n                ) : (\n                  <div\n                    style={{\n                      width: '274px',\n                      height: '411px',\n                      border: '#000 solid 1px',\n                      display: 'flex',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                    }}\n                  >\n                    <p>Not found</p>\n                  </div>\n                )}\n                <div className={css.text}>\n                  <p className={css.name}>{movie.name}</p>\n                  <p className={css.year}>{movie.date}</p>\n                </div>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n      {movies && movies.length === 0 && <p>We haven't found anything.</p>}\n    </div>\n  );\n};\nexport default Movies;\n"],"names":["useSearchParams","searchParams","setSearchParams","searchWord","get","useState","movies","setMovies","changingValue","setChangingValue","submitValue","setSubmitValue","loader","setLoader","useEffect","fetch","axios","response","filmNames","data","results","map","film","title","name","id","poster_path","release_date","img","date","slice","console","log","className","css","onSubmit","e","preventDefault","target","value","trim","search","onChange","plaseholder","height","width","radius","color","ariaLabel","margin","length","movie","to","state","from","src","alt","style","border","display","justifyContent","alignItems"],"sourceRoot":""}